import{a2 as t,V as g,a3 as C,a4 as o,a5 as f,a6 as w,a7 as v,a8 as y,a9 as W,aa as A,ab as T,ac as k,ad as E,ae as R,af as b,ag as S,ah as P,ai as I,aj as F,ak as O,al as B}from"./index-e5ac643b.js";import{S as D}from"./erc-1155-standard-ad8a6a10.browser.esm-463a0d13.js";import{P as N}from"./thirdweb-checkout-c75a4919.browser.esm-48d23ca1.js";class x{constructor(a){t(this,"events",void 0),this.events=a}async getAllClaimerAddresses(a){const r=(await this.events.getEvents("TokensClaimed")).filter(e=>e.data&&g.isBigNumber(e.data.tokenId)?e.data.tokenId.eq(a):!1);return Array.from(new Set(r.filter(e=>{var s;return typeof((s=e.data)==null?void 0:s.claimer)=="string"}).map(e=>e.data.claimer)))}}class p extends D{constructor(a,r,e){var s;let l=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},d=arguments.length>4?arguments[4]:void 0,m=arguments.length>5?arguments[5]:void 0,u=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new C(a,r,d,l);super(u,e,m),s=this,t(this,"abi",void 0),t(this,"sales",void 0),t(this,"platformFees",void 0),t(this,"encoder",void 0),t(this,"estimator",void 0),t(this,"events",void 0),t(this,"metadata",void 0),t(this,"app",void 0),t(this,"roles",void 0),t(this,"royalties",void 0),t(this,"claimConditions",void 0),t(this,"checkout",void 0),t(this,"history",void 0),t(this,"interceptor",void 0),t(this,"owner",void 0),t(this,"createBatch",o(async(n,i)=>this.erc1155.lazyMint.prepare(n,i))),t(this,"claimTo",o(async function(n,i,c){let h=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0;return s.erc1155.claimTo.prepare(n,i,c,{checkERC20Allowance:h})})),t(this,"claim",o(async function(n,i){let c=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0;const h=await s.contractWrapper.getSignerAddress();return s.claimTo.prepare(h,n,i,c)})),t(this,"burnTokens",o(async(n,i)=>this.erc1155.burn.prepare(n,i))),this.abi=f.parse(d),this.metadata=new w(this.contractWrapper,v,this.storage),this.app=new y(this.contractWrapper,this.metadata,this.storage),this.roles=new W(this.contractWrapper,p.contractRoles),this.royalties=new A(this.contractWrapper,this.metadata),this.sales=new T(this.contractWrapper),this.claimConditions=new k(this.contractWrapper,this.metadata,this.storage),this.events=new E(this.contractWrapper),this.history=new x(this.events),this.encoder=new R(this.contractWrapper),this.estimator=new b(this.contractWrapper),this.platformFees=new S(this.contractWrapper),this.interceptor=new P(this.contractWrapper),this.checkout=new N(this.contractWrapper),this.owner=new I(this.contractWrapper)}onNetworkUpdated(a){this.contractWrapper.updateSignerOrProvider(a)}getAddress(){return this.contractWrapper.readContract.address}async getAll(a){return this.erc1155.getAll(a)}async getOwned(a){return this.erc1155.getOwned(a)}async getTotalCount(){return this.erc1155.totalCount()}async isTransferRestricted(){return!await this.contractWrapper.readContract.hasRole(F("transfer"),O)}async getClaimTransaction(a,r,e){let s=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0;return this.erc1155.getClaimTransaction(a,r,e,{checkERC20Allowance:s})}async prepare(a,r,e){return B.fromContractWrapper({contractWrapper:this.contractWrapper,method:a,args:r,overrides:e})}async call(a,r,e){return this.contractWrapper.call(a,r,e)}}t(p,"contractRoles",["admin","minter","transfer"]);export{p as EditionDrop};
