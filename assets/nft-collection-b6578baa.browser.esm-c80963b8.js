import{a3 as m,a2 as t,a4 as s,a5 as u,a6 as l,b1 as g,a8 as W,a9 as w,aa as C,ab as f,ae as v,af as y,ad as T,ag as b,ah as R,b2 as S,ai as E,aj as A,ak as B,al as F}from"./index-382c79c9.js";import{S as M}from"./erc-721-standard-3562493a.browser.esm-2844d9e4.js";class o extends M{constructor(a,e,n){let h=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},c=arguments.length>4?arguments[4]:void 0,p=arguments.length>5?arguments[5]:void 0,d=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new m(a,e,c,h);super(d,n,p),t(this,"abi",void 0),t(this,"metadata",void 0),t(this,"app",void 0),t(this,"roles",void 0),t(this,"encoder",void 0),t(this,"estimator",void 0),t(this,"events",void 0),t(this,"sales",void 0),t(this,"platformFees",void 0),t(this,"royalties",void 0),t(this,"owner",void 0),t(this,"signature",void 0),t(this,"interceptor",void 0),t(this,"mint",s(async r=>this.erc721.mint.prepare(r))),t(this,"mintTo",s(async(r,i)=>this.erc721.mintTo.prepare(r,i))),t(this,"mintBatch",s(async r=>this.erc721.mintBatch.prepare(r))),t(this,"mintBatchTo",s(async(r,i)=>this.erc721.mintBatchTo.prepare(r,i))),t(this,"burn",s(r=>this.erc721.burn.prepare(r))),this.abi=u.parse(c||[]),this.metadata=new l(this.contractWrapper,g,this.storage),this.app=new W(this.contractWrapper,this.metadata,this.storage),this.roles=new w(this.contractWrapper,o.contractRoles),this.royalties=new C(this.contractWrapper,this.metadata),this.sales=new f(this.contractWrapper),this.encoder=new v(this.contractWrapper),this.estimator=new y(this.contractWrapper),this.events=new T(this.contractWrapper),this.platformFees=new b(this.contractWrapper),this.interceptor=new R(this.contractWrapper),this.signature=new S(this.contractWrapper,this.storage),this.owner=new E(this.contractWrapper)}onNetworkUpdated(a){this.contractWrapper.updateSignerOrProvider(a)}getAddress(){return this.contractWrapper.readContract.address}async isTransferRestricted(){return!await this.contractWrapper.readContract.hasRole(A("transfer"),B)}async getMintTransaction(a,e){return this.erc721.getMintTransaction(a,e)}async prepare(a,e,n){return F.fromContractWrapper({contractWrapper:this.contractWrapper,method:a,args:e,overrides:n})}async call(a,e,n){return this.contractWrapper.call(a,e,n)}}t(o,"contractRoles",["admin","minter","transfer"]);export{o as NFTCollection};
